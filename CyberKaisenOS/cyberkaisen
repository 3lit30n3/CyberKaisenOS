#!/bin/bash

# cyberkaisen Launcher Script
# Simple command to run cyberkaisen

# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

# ASCII Art (small version for quick display)
echo -e "${PURPLE}"
cat << "EOF"
 ██████╗██╗   ██╗██████╗ ███████╗██████╗ ██╗  ██╗ █████╗ ██╗███████╗███████╗███╗   ██╗
██╔════╝╚██╗ ██╔╝██╔══██╗██╔════╝██╔══██╗██║ ██╔╝██╔══██╗██║██╔════╝██╔════╝████╗  ██║
██║      ╚████╔╝ ██████╔╝█████╗  ██████╔╝█████╔╝ ███████║██║███████╗█████╗  ██╔██╗ ██║
██║       ╚██╔╝  ██╔══██╗██╔══╝  ██╔══██╗██╔═██╗ ██╔══██║██║╚════██║██╔══╝  ██║╚██╗██║
╚██████╗   ██║   ██████╔╝███████╗██║  ██║██║  ██╗██║  ██║██║███████║███████╗██║ ╚████║
 ╚═════╝   ╚═╝   ╚═════╝ ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝╚══════╝╚══════╝╚═╝  ╚═══╝
EOF
echo -e "${NC}"

# Check if kernel module is loaded
if ! lsmod | grep -q phixeo_module; then
    echo -e "${YELLOW}Phixeo kernel module not loaded. Loading now...${NC}"
    if ! modprobe phixeo_module 2>/dev/null; then
        echo -e "${RED}Failed to load kernel module. Running in user-mode only.${NC}"
    else
        echo -e "${GREEN}Kernel module loaded successfully.${NC}"
    fi
fi

# Parse command line arguments
DOMAIN="void"
POSSESS=false
POSSESS_TARGET=""
INTERACTIVE=false

function show_help {
    echo -e "${BLUE}Usage: cyberkaisen [OPTIONS]${NC}"
    echo -e ""
    echo -e "${YELLOW}Options:${NC}"
    echo -e "  -d, --domain DOMAIN    Domain expansion to use (void, shrine, sanctuary)"
    echo -e "  -p, --possess TARGET   Possess another system (optional)"
    echo -e "  -i, --interactive      Run in interactive mode"
    echo -e "  -h, --help             Show this help message"
    echo -e ""
    echo -e "${YELLOW}Examples:${NC}"
    echo -e "  cyberkaisen                     # Run with Unlimited Void domain"
    echo -e "  cyberkaisen -d shrine           # Run with Malevolent Shrine domain"
    echo -e "  cyberkaisen -p 192.168.1.100    # Possess another system"
    echo -e "  cyberkaisen -i                  # Run in interactive mode"
    exit 0
}

# Parse arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        -d|--domain)
            DOMAIN="$2"
            shift 2
            ;;
        -p|--possess)
            POSSESS=true
            POSSESS_TARGET="$2"
            shift 2
            ;;
        -i|--interactive)
            INTERACTIVE=true
            shift
            ;;
        -h|--help)
            show_help
            ;;
        *)
            echo -e "${RED}Unknown option: $1${NC}"
            show_help
            ;;
    esac
done

# Validate domain
if [[ "$DOMAIN" != "void" && "$DOMAIN" != "shrine" && "$DOMAIN" != "sanctuary" ]]; then
    echo -e "${RED}Invalid domain: $DOMAIN${NC}"
    echo -e "${YELLOW}Valid domains: void, shrine, sanctuary${NC}"
    exit 1
fi

# Handle possession if requested
if $POSSESS; then
    if [[ -z "$POSSESS_TARGET" ]]; then
        echo -e "${RED}No target specified for possession${NC}"
        exit 1
    fi

    echo -e "${YELLOW}Initiating possession of $POSSESS_TARGET...${NC}"
    if command -v possess &>/dev/null; then
        possess "$POSSESS_TARGET"
        exit $?
    else
        echo -e "${RED}Possession script not found${NC}"
        exit 1
    fi
fi

# Run in interactive mode if requested
if $INTERACTIVE; then
    echo -e "${YELLOW}Starting cyberkaisen in interactive mode...${NC}"
    cd ..
    python3 -c "import sys; sys.path.append('.'); from CyberKaisenOS import CyberKaisenOS as cyberkaisen; os = cyberkaisen(); print('Interactive mode: Type commands to execute domain expansions.'); print('Available commands: void, shrine, sanctuary, exit'); while True: cmd = input('> '); if cmd == 'exit': break; elif cmd == 'void': os.unlimited_void(); elif cmd == 'shrine': os.malevolent_shrine(); elif cmd == 'sanctuary': os.firewall_sanctuary(); else: print('Unknown command');"
    exit $?
fi

# Run the appropriate domain expansion
echo -e "${YELLOW}Activating Domain Expansion: ${DOMAIN^}...${NC}"

case $DOMAIN in
    void)
        # Set kernel mode to quantum if module is loaded
        if lsmod | grep -q phixeo_module && [ -w /proc/phixeo_control ]; then
            echo "mode=quantum" > /proc/phixeo_control
            echo "defense=maximum" > /proc/phixeo_control
        fi

        # Run Unlimited Void domain expansion
        cd ..
        python3 -c "import sys; sys.path.append('.'); from CyberKaisenOS import CyberKaisenOS as cyberkaisen; os = cyberkaisen(); os.unlimited_void()"
        ;;
    shrine)
        # Set kernel mode to fractal if module is loaded
        if lsmod | grep -q phixeo_module && [ -w /proc/phixeo_control ]; then
            echo "mode=fractal" > /proc/phixeo_control
            echo "defense=maximum" > /proc/phixeo_control
        fi

        # Run Malevolent Shrine domain expansion
        cd ..
        python3 -c "import sys; sys.path.append('.'); from CyberKaisenOS import CyberKaisenOS as cyberkaisen; os = cyberkaisen(); os.malevolent_shrine()"
        ;;
    sanctuary)
        # Set kernel mode to geometric if module is loaded
        if lsmod | grep -q phixeo_module && [ -w /proc/phixeo_control ]; then
            echo "mode=geometric" > /proc/phixeo_control
            echo "defense=maximum" > /proc/phixeo_control
        fi

        # Run Firewall Sanctuary domain expansion
        cd ..
        python3 -c "import sys; sys.path.append('.'); from CyberKaisenOS import CyberKaisenOS as cyberkaisen; os = cyberkaisen(); os.firewall_sanctuary()"
        ;;
esac

echo -e "${GREEN}cyberkaisen is now active.${NC}"
echo -e "${BLUE}To check status: cat /proc/phixeo_status${NC}"

exit 0
